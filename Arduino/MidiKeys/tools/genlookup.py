#!/usr/bin/env python3

import math

velocity_factor = 0.2
velocity_curve  = 60


# max human speed about 3ms
# slowest sensible speed around 64 ms
#
# we want near perfect lookups with a log curve

def microsToVelocity(micros):
    if(micros <= 0):
        return 127
    millis = micros/1000
    velocity = velocity_curve * math.log(velocity_factor*millis)
    if velocity < 0:
        return 127
    if (velocity > 127):
        return 1
    return 127-math.floor(velocity)

def outputCArray(name, length, callback):
    print("static const char {}[{}] = {{".format(name, length))

    print("};")


print("/**")
print(" * !! AUTOGENERATED !!")
print(" *")
print(" * Generated by tools/genlookup.py - do not modify this file, it might be overwritten")
print(" *")
print(" */")
print("")
outputCArray("velocity_log", 256, microsToVelocity)

exit(0)


print("static const char velocity_log[256] = {")

micros = -1
index = None
lastvel = 0
while micros < 65280:
    micros += 1
    i = micros>>8
    if(i == index):
        continue
    index = i
    vel = microsToVelocity(micros)
    #print("{}\t{}\t{}\t{}".format(micros, i, vel, lastvel-vel))
    if(i == 255):
        print("\t{}".format(vel))
    else:
        print("\t{},".format(vel))
    lastvel = vel
    #print(micros>>8)

print("};")
